import { addHours, parseISO, subHours } from 'date-fns'
import format from 'date-fns/format'

export interface Column {
  header: { dow: string; date: string }
  accessor: number
}

interface Row {
  time: string
  data: (string | null)[]
}

interface Data {
  columns: Column[]
  rows: Row[]
}

const dow = ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.']

const sortRows = (rows: Row[]) => {
  return rows.sort((a, b) => {
    const [aHour, aMinure] = a.time.split(':')
    const [bHour, bMinure] = b.time.split(':')
    if (aHour !== bHour) {
      return parseInt(aHour) - parseInt(bHour)
    }

    if (aMinure !== bMinure) {
      return parseInt(aMinure) - parseInt(bMinure)
    }

    return -1
  })
}

// this is highly inefficient,
export function transformData(data: { [key: string]: string[] }): Data {
  const columns: Column[] = []
  const rows: Row[] = []

  // write function to sort rows by time
  const orderedDates = Object(Object.keys(data)).sort(
    (a: string, b: string) => {
      const aDate = new Date(a)
      const bDate = new Date(b)
      return aDate.getTime() - bDate.getTime()
    }
  )

  for (let i = 0; i < orderedDates.length; i++) {
    const slotsForADay = data[orderedDates[i]]

    const dayInDate = new Date(orderedDates[i])
    const fomrDate = format(dayInDate, 'dd/MM')
    const formDayOfWeek = dow[dayInDate.getDay()]

    columns.push({
      header: { dow: formDayOfWeek, date: fomrDate },
      accessor: i
    })

    for (let j = 0; j < slotsForADay.length; j++) {
      const slot = slotsForADay[j]

      const startDate = parseISO(slot)

      // yeah i know
      const startTime = format(subHours(startDate, 1), 'HH:mm')
      const existingRow = rows.find((row) => row.time === startTime)

      if (existingRow) {
        existingRow.data[i] = slot
      } else {
        const newRow: Row = {
          time: startTime,
          data: Array(orderedDates.length).fill(null)
        }
        newRow.data[i] = slot
        rows.push(newRow)
      }
    }
  }

  return { columns, rows: sortRows(rows) }
}

export const dataSample = [
  [
    '2021-03-01T09:15:00.0000000000+00:00',
    '2021-03-01T09:30:00.0000000000+00:00',
    '2021-03-01T09:45:00.0000000000+00:00',
    '2021-03-01T10:00:00.0000000000+00:00',
    '2021-03-01T10:15:00.0000000000+00:00',
    '2021-03-01T10:30:00.0000000000+00:00',
    '2021-03-01T10:45:00.0000000000+00:00',
    '2021-03-01T11:00:00.0000000000+00:00',
    '2021-03-01T11:15:00.0000000000+00:00',
    '2021-03-01T11:30:00.0000000000+00:00',
    '2021-03-01T13:15:00.0000000000+00:00',
    '2021-03-01T13:30:00.0000000000+00:00',
    '2021-03-01T13:45:00.0000000000+00:00',
    '2021-03-01T14:00:00.0000000000+00:00',
    '2021-03-01T14:15:00.0000000000+00:00',
    '2021-03-01T16:15:00.0000000000+00:00',
    '2021-03-01T16:30:00.0000000000+00:00',
    '2021-03-01T16:45:00.0000000000+00:00',
    '2021-03-01T17:00:00.0000000000+00:00'
  ],
  [
    '2021-03-02T08:15:00.0000000000+00:00',
    '2021-03-02T08:30:00.0000000000+00:00',
    '2021-03-02T08:45:00.0000000000+00:00',
    '2021-03-02T09:00:00.0000000000+00:00',
    '2021-03-02T09:15:00.0000000000+00:00',
    '2021-03-02T09:30:00.0000000000+00:00',
    '2021-03-02T09:45:00.0000000000+00:00',
    '2021-03-02T10:00:00.0000000000+00:00',
    '2021-03-02T10:15:00.0000000000+00:00',
    '2021-03-02T10:30:00.0000000000+00:00',
    '2021-03-02T10:45:00.0000000000+00:00',
    '2021-03-02T11:00:00.0000000000+00:00',
    '2021-03-02T11:15:00.0000000000+00:00',
    '2021-03-02T11:30:00.0000000000+00:00',
    '2021-03-02T13:15:00.0000000000+00:00',
    '2021-03-02T13:30:00.0000000000+00:00',
    '2021-03-02T13:45:00.0000000000+00:00',
    '2021-03-02T14:00:00.0000000000+00:00',
    '2021-03-02T14:15:00.0000000000+00:00',
    '2021-03-02T14:30:00.0000000000+00:00',
    '2021-03-02T14:45:00.0000000000+00:00',
    '2021-03-02T15:00:00.0000000000+00:00',
    '2021-03-02T15:15:00.0000000000+00:00',
    '2021-03-02T15:30:00.0000000000+00:00',
    '2021-03-02T15:45:00.0000000000+00:00',
    '2021-03-02T16:00:00.0000000000+00:00',
    '2021-03-02T16:15:00.0000000000+00:00',
    '2021-03-02T16:30:00.0000000000+00:00',
    '2021-03-02T16:45:00.0000000000+00:00',
    '2021-03-02T17:00:00.0000000000+00:00'
  ],
  [
    '2021-03-03T08:15:00.0000000000+00:00',
    '2021-03-03T08:30:00.0000000000+00:00',
    '2021-03-03T08:45:00.0000000000+00:00',
    '2021-03-03T09:00:00.0000000000+00:00',
    '2021-03-03T09:15:00.0000000000+00:00',
    '2021-03-03T10:00:00.0000000000+00:00'
  ]
]

export const dataSampleHard = {
  '2021-03-01': [
    '2021-03-01T09:15:00+00:00',
    '2021-03-01T09:30:00+00:00',
    '2021-03-01T09:45:00+00:00',
    '2021-03-01T10:00:00+00:00',
    '2021-03-01T10:15:00+00:00',
    '2021-03-01T10:30:00+00:00',
    '2021-03-01T10:45:00+00:00',
    '2021-03-01T11:00:00+00:00',
    '2021-03-01T11:15:00+00:00',
    '2021-03-01T11:30:00+00:00',
    '2021-03-01T13:15:00+00:00',
    '2021-03-01T13:30:00+00:00',
    '2021-03-01T13:45:00+00:00',
    '2021-03-01T14:00:00+00:00',
    '2021-03-01T14:15:00+00:00',
    '2021-03-01T16:15:00+00:00',
    '2021-03-01T16:30:00+00:00',
    '2021-03-01T16:45:00+00:00',
    '2021-03-01T17:00:00+00:00'
  ],
  '2021-03-02': [],
  '2021-03-03': [
    '2021-03-03T08:15:00+00:00',
    '2021-03-03T08:30:00+00:00',
    '2021-03-03T08:45:00+00:00',
    '2021-03-03T09:00:00+00:00',
    '2021-03-03T09:15:00+00:00',
    '2021-03-03T10:00:00+00:00'
  ],
  '2021-03-04': [
    '2021-03-04T10:15:00+00:00',
    '2021-03-04T10:30:00+00:00',
    '2021-03-04T10:45:00+00:00',
    '2021-03-04T11:00:00+00:00',
    '2021-03-04T11:15:00+00:00',
    '2021-03-04T11:30:00+00:00',
    '2021-03-04T13:15:00+00:00',
    '2021-03-04T16:15:00+00:00',
    '2021-03-04T16:30:00+00:00',
    '2021-03-04T16:45:00+00:00',
    '2021-03-04T17:00:00+00:00'
  ],
  '2021-03-05': [],
  '2021-03-06': [
    '2021-03-06T08:15:00+00:00',
    '2021-03-06T08:30:00+00:00',
    '2021-03-06T08:45:00+00:00',
    '2021-03-06T09:00:00+00:00',
    '2021-03-06T09:15:00+00:00',
    '2021-03-06T09:30:00+00:00',
    '2021-03-06T09:45:00+00:00',
    '2021-03-06T10:00:00+00:00',
    '2021-03-06T10:15:00+00:00',
    '2021-03-06T10:30:00+00:00',
    '2021-03-06T10:45:00+00:00',
    '2021-03-06T11:00:00+00:00',
    '2021-03-06T11:15:00+00:00',
    '2021-03-06T11:30:00+00:00',
    '2021-03-06T11:45:00+00:00',
    '2021-03-06T12:00:00+00:00',
    '2021-03-06T12:15:00+00:00',
    '2021-03-06T12:30:00+00:00',
    '2021-03-06T12:45:00+00:00',
    '2021-03-06T13:00:00+00:00',
    '2021-03-06T13:15:00+00:00',
    '2021-03-06T13:30:00+00:00',
    '2021-03-06T13:45:00+00:00',
    '2021-03-06T14:00:00+00:00',
    '2021-03-06T14:15:00+00:00',
    '2021-03-06T14:30:00+00:00',
    '2021-03-06T14:45:00+00:00',
    '2021-03-06T15:00:00+00:00',
    '2021-03-06T15:15:00+00:00',
    '2021-03-06T15:30:00+00:00'
  ],
  '2021-03-07': [],
  '2021-03-08': [
    '2021-03-08T08:15:00+00:00',
    '2021-03-08T08:30:00+00:00',
    '2021-03-08T08:45:00+00:00',
    '2021-03-08T09:00:00+00:00',
    '2021-03-08T09:15:00+00:00',
    '2021-03-08T09:30:00+00:00',
    '2021-03-08T09:45:00+00:00',
    '2021-03-08T10:00:00+00:00',
    '2021-03-08T10:15:00+00:00',
    '2021-03-08T10:30:00+00:00',
    '2021-03-08T10:45:00+00:00',
    '2021-03-08T11:00:00+00:00',
    '2021-03-08T11:15:00+00:00',
    '2021-03-08T11:30:00+00:00',
    '2021-03-08T13:15:00+00:00',
    '2021-03-08T13:30:00+00:00',
    '2021-03-08T13:45:00+00:00',
    '2021-03-08T14:00:00+00:00',
    '2021-03-08T14:15:00+00:00',
    '2021-03-08T14:30:00+00:00',
    '2021-03-08T14:45:00+00:00',
    '2021-03-08T15:00:00+00:00',
    '2021-03-08T15:15:00+00:00',
    '2021-03-08T15:30:00+00:00',
    '2021-03-08T15:45:00+00:00',
    '2021-03-08T16:00:00+00:00',
    '2021-03-08T16:15:00+00:00',
    '2021-03-08T16:30:00+00:00',
    '2021-03-08T16:45:00+00:00',
    '2021-03-08T17:00:00+00:00'
  ]
}
